//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AbayMVC.BidServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BidServiceReference.IBidService")]
    public interface IBidService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBidService/BidOnItem", ReplyAction="http://tempuri.org/IBidService/BidOnItemResponse")]
        bool BidOnItem(int itemId, double amount, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBidService/BidOnItem", ReplyAction="http://tempuri.org/IBidService/BidOnItemResponse")]
        System.Threading.Tasks.Task<bool> BidOnItemAsync(int itemId, double amount, string token);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBidServiceChannel : AbayMVC.BidServiceReference.IBidService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BidServiceClient : System.ServiceModel.ClientBase<AbayMVC.BidServiceReference.IBidService>, AbayMVC.BidServiceReference.IBidService {
        
        public BidServiceClient() {
        }
        
        public BidServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BidServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BidServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BidServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool BidOnItem(int itemId, double amount, string token) {
            return base.Channel.BidOnItem(itemId, amount, token);
        }
        
        public System.Threading.Tasks.Task<bool> BidOnItemAsync(int itemId, double amount, string token) {
            return base.Channel.BidOnItemAsync(itemId, amount, token);
        }
    }
}
